version: '3' 

services:

    # php-fpm 8.2
    app:
        build:
            context: ./dockerfiles
            dockerfile: app.dockerfile
        image: ${PROJECT_NAME}/app
        container_name: ${PROJECT_NAME}-app
        environment:
            # nginx reverse proxy config
            # see documnetation at https://hub.docker.com/r/jwilder/nginx-proxy/
            VIRTUAL_HOST: "${PROJECT_NAME}.loc"
            XDEBUG_CONFIG: "remote_host=host.docker.internal mode=debug remote_port=${XDEBUG_REMOTE_PORT}"
            PHP_IDE_CONFIG: "serverName=${PROJECT_NAME}"
        volumes:
            - ./code:/var/www/html # code
            - ./config/php-ini:/usr/local/etc/php # php.ini
            - ./logs/php:/log/php # logs
        networks:
            - inner
            - nginx-proxy
        extra_hosts:
            host.docker.internal: host-gateway
    
    # static content
    static:
        build:
            context: ./dockerfiles
            dockerfile: static.dockerfile
        image: ${PROJECT_NAME}/static
        container_name: ${PROJECT_NAME}-static
        volumes:
            - ./code:/var/www/html
            - ./config/nginx/conf.d:/etc/nginx/conf.d
            - ./config/nginx/vhost.d:/etc/nginx/vhost.d
        restart: unless-stopped
        networks:
            - inner
    
    # mysql | mariadb
    db:
        build:
            context: ./dockerfiles
            dockerfile: db.dockerfile
        image: ${PROJECT_NAME}/db
        container_name: ${PROJECT_NAME}-db
        volumes:
            - ./data/mysql:/var/lib/mysql
        environment:
            MARIADB_USER: "${PROJECT_NAME}"
            MARIADB_PASSWORD: "${PROJECT_NAME}"
            MARIADB_ROOT_PASSWORD: "root"
        ports:
            - "${MYSQL_PORT}:3306"
        command: --default-authentication-plugin=mysql_native_password
        restart: unless-stopped
        networks:
            - inner
    
    #redis
    # cache:
        # build:
            # context: ./dockerfiles
            # dockerfile: cache.dockerfile
        # image: ${PROJECT_NAME}/cache
        # container_name: ${PROJECT_NAME}-cache
        # command: redis-server
        # environment:
            # REDIS_PASSWORD: "replica_password"
            # REDIS_MASTER_PASSWORD: "master"
            # REDIS_REPLICATION_MODE: "slave"
            # REDIS_MASTER_HOST: "redis-master"
            # REDIS_MASTER_PORT_NUMBER: "6379"
            # REDIS_MASTER_PASSWORD: "my_master_password"
            # ALLOW_EMPTY_PASSWORD: "yes"
            # REDIS_TLS_ENABLED: "yes"
            # REDIS_TLS_CERT_FILE: "/opt/bitnami/redis/certs/redis.crt"
            # REDIS_TLS_KEY_FILE: "/opt/bitnami/redis/certs/redis.key"
            # REDIS_TLS_CA_FILE: "/opt/bitnami/redis/certs/redisCA.crt"
        # volumes:
            # - ./code:/code
            # - ./data/redis:/var/lib/redis
            # - ./config/redis:/usr/local/etc/redis
        # ports:
            # - "${REDIS_PORT}:16379"
        # networks:
            # - inner
            
networks:
    nginx-proxy:
        external: true
        name: nginx-proxy
    inner:
        driver: bridge